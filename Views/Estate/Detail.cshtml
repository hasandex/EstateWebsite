@model Estate
<div class="container mt-4">
    <!--Images Carousel-->
    <div class="   ">
        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
            <!-- The slideshow/carousel -->
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="data:image/*;base64,@(Convert.ToBase64String(Model.Cover))" alt="Los Angeles" class="d-block w-100">
                </div>
                @foreach (var img in Model.EstateImages)
                {
                    <div class="carousel-item">
                        <img src="@($"{Settings.imagesPath}/{img.Path}")" alt="Chicago" class="d-block w-100">
                    </div>
                }
            </div>
            <!-- Left and right controls/icons -->
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <div class="row mt-3 mb-4">
        <!--Right Column-->
        <!--Map-->
        <div class="col-md-8 col-lg-8 mt-4">
            <h4>Location On Map</h4>
            <div class="form-row row">
                <!-- Reference to the Bing Maps SDK -->
                <script type='text/javascript'
                        src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=[ArTYnXAo5ajG1e4ZyFIV-LT3sW_IU0Uy2YETN7N-u5EdkJOaOwaft6BOA1SPlVfA]'
                        async defer>
                </script>
                <div class="col-md-12" id="myMap" style='position:relative;height:400px;' onload="GetMap();"></div>
            </div>
        </div>
        <!--Left Column-->
        <div class="col-md-4 col-lg-4 mt-4">
            <h4>HighLights</h4>
            <div class="mb-4 mt-2">
                @if (Model.ForSale == true)
                {
                    <span class="spanfor"><i class="bi bi-dot"></i>For Sell</span>
                }
                @if (Model.ForRent == true)
                {
                    <div class="spanfor"><i class="bi bi-dot"></i>For Rent</div>
                }
                @if (User.Identity.IsAuthenticated)
                {
                    @if (ViewBag.savePropertyStatus == null)
                    {
                        <a asp-action="SaveProperty" asp-controller="User" asp-route-estateId="@Model.Id">
                            <i class="bi bi-heart"></i>
                        </a>
                    }
                    else
                    {
                        <a asp-action="RemoveProperty" asp-controller="User" asp-route-estateId="@Model.Id">
                            <i class="bi bi-heart-fill"></i>
                        </a>
                    }
                }
            </div>
            <div class="d-flex mb-2">
                <span class="fonty">  <i class="bi bi-house-heart-fill fs-4"></i> @Model.Category</span>
            </div>

            <div class="mb-4">
                <span class="h5price mb-2">$@Model.Price</span>
                <h5 class="loc fonty"><i class="bi bi-geo-alt-fill"></i>St: @Model.Street, @Model.City, @Model.Governorate </h5>
            </div>
            <div class="devt mb-4">
                <div>
                    <span class="spany">@Model.Area</span>
                    <span class=""><i class="bi bi-textarea"></i>Area</span>
                </div>
                <div>
                    <span class="spany">@Model.NFloor</span>
                    <span><i class="bi bi-building-fill"></i>Floor</span>
                </div>
                <div>
                    <span class="spany">@Model.NRoom</span>
                    <span><i class="bi bi-house-heart"></i>Room</span>
                </div>

            </div>
            <div>

                <div>
                    <span><i class="bi bi-telephone"></i>   <span> Owner Name: @Model.OwnerName</span>  </span>
                </div>
                <div>
                    <span><i class="bi bi-person fs-4"></i>   <span> Number Phone: @Model.OwnerPhone</span>  </span>
                </div>
            </div>

        </div>
    </div>
    <!--Line-->
    <div class="" style=" text-align: center;">
        <div class="line"></div>
        <h2 style="display:inline-block;">Facts & features</h2>
        <div class="line"></div>
    </div>
    <!--Facts & features-->
    <div class="container">
        <div class="row mt-4">
            <div class="col-md-6 col-sm-12">
                <h4>Interior</h4>
                <div>
                    <h6>Floor & Total Rooms</h6>
                    <ul>
                        <li>Floor: @Model.NFloor </li>
                        <li>Total Rooms: @Model.NRoom </li>
                    </ul>
                </div>
                <div>
                    <h6>Bedrooms & bathrooms</h6>
                    <ul>
                        <li>Bedrooms: @Model.NBedroom </li>
                        <li>Bathrooms: @Model.NBath </li>
                    </ul>
                </div>
                <div>
                    <h6>LivingRoom & ReceptionRoom</h6>
                    <ul>
                        <li>LivingRoom: @Model.NLivingRoom </li>
                        <li>ReceptionRoom: @Model.NReceptionRoom </li>
                    </ul>
                </div>
                <div>
                    <h6>Kitchen & FoodRoom</h6>
                    <ul>
                        <li>Kitchen: @Model.NKitchen </li>
                        <li>FoodRoom: @Model.NFoodRoom </li>
                    </ul>
                </div>


            </div>
            <div class="col-md-6 col-sm-12">
                <h4>General</h4>
                <div>
                    <h6>Area & Price</h6>
                    <ul>
                        <li>Estimated Price: @Model.Price </li>
                        <li>Area: @Model.Area </li>
                    </ul>
                </div>

                <h4>Property</h4>
                <div>
                    <ul>
                        <li>Garage: @Model.NGarage </li>
                        <li>Depot: @Model.NDepot </li>
                        <li>Balcone: @Model.NBalcone </li>

                    </ul>
                </div>
            </div>


        </div>
    </div>
    <!-- comments area -->
    <div class="container">
        <div class="row mt-4">
            <div class="col-md-6 col-sm-12">
                <!-- add comment -->
                <form asp-controller="User" asp-action="AddComment" method="post">
                    <textarea id="inputField" class="form-control" aria-label="With textarea" name="Content" style="border:none ;width: 50%; vertical-align:top;" placeholder="add comment"></textarea>
                    <input type="hidden" name="UserId" class="form-control" value="@UserManager.GetUserId(User)" />
                    <input type="hidden" name="EstateId" class="form-control" value="@Model.Id" />
                    <button id="submitButton" type="submit" class="btn btn-success btn-sm" style="display: inline-block; margin-top:10px;">Comment</button>
                </form>
                <!-- end of add comment -->
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row mt-4">
            <div class="col-md-6 col-sm-12">
                <h4>Comments</h4>
                @if (Model != null && Model.Comments != null && Model.Comments.Any())
                {
                    @foreach (var comment in Model.Comments)
                    {
                        var user = await UserManager.FindByIdAsync(comment.UserId);
                        
                        <div id="comment-@(comment.Id)" class="overflow-hidden d-flex mt-4" style="gap:10px; width: 100%;">
                            <input id="commentId" hidden value="@comment.Id" />
                            <div style="width: 50px;height: 50px;border-radius: 50%;overflow: hidden;border: 3px solid white;flex-shrink: 0;">
                                @if (user.ProfilePicture != null)
                                {
                                    <img src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))" style="height:100%; width: 100%;" alt="profile">
                                }
                                else
                                {
                                    <img src="~/assets/cover.png" style="height:100%; width: 100%;" alt="profile">
                                }
                            </div>
                            <div class="w-50 d-flex" style="gap:40px">
                                <p class="mt-1" style="word-break: break-all;">
                                    <strong>@user.FName -</strong>
                                    <span class="text-muted">@comment.CreatedDate.ToString("MMMM") @comment.CreatedDate.Year</span>
                                    <br />
                                @comment.Content
                                </p>
                                <!-- add delete button -->
                                @if(UserManager.GetUserAsync(User)?.Result?.Id == comment.UserId)
                                {
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton@(comment.Id)" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-xs dropdown-menu-end" aria-labelledby="dropdownMenuButton@(comment.Id)">
                                            <li><a class="dropdown-item" onclick="deleteComment('@comment.Id')">Delete</a></li>
                                        </ul>
                                    </div>
                                }
                                <!-- end of delete button -->
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No comments available.</p>
                }
            </div>
        </div>
    </div>



</div>

@section Scripts {
    <script src="~/js/delete-comment.js"></script>
}

<script type='text/javascript'>
    function GetMap() {


        ///////////////Converting the C# Model to JS model
        // convsert the data base table to Array in json type
        var home = @Html.Raw(Json.Serialize(Model));


        //You can customize the map as you load it.
        // Use the following code to update how the map is loaded in the GetMap function such that it sets the type to aerial,
        // the zoom level to 10, and the map center over London, UK (51.50632, -0.12714).
        var map = new Microsoft.Maps.Map('#myMap', {
            credentials: 'ArTYnXAo5ajG1e4ZyFIV-LT3sW_IU0Uy2YETN7N-u5EdkJOaOwaft6BOA1SPlVfA',
            center: new Microsoft.Maps.Location(home.longitude, home.latitude),
            mapTypeId: Microsoft.Maps.MapTypeId.aerial,
            zoom: 10
        });

        var location = new Microsoft.Maps.Location(home.longitude, home.latitude);
        var pin = new Microsoft.Maps.Pushpin(location, {
            color: 'green',
            title: home.name,
        });
        map.entities.push(pin);

        //////////////////Pushpins, sometimes known as MapIcons or Markers,
        // are the primary method in the Bing Maps V8 Map Control to add a graphical image and text at a location within the map.
        //Create custom Pushpin
        // هنا يمكننا وضع الاحداثيات بدل سينتر لتثبيت ماركر

        var myloc = new Microsoft.Maps.Location(35.340192118895025, 35.93475407561252);
        var pin = new Microsoft.Maps.Pushpin(myloc, {
            color: 'red',
            title: 'Jableh',
            subTitle: 'City Center',

        });
        map.entities.push(pin);





    } // end of Getmap()



</script>

<script>
    window.onload = function () {
        const inputField = document.getElementById("inputField");
        const submitButton = document.getElementById("submitButton");

        // Disable the button initially
        submitButton.disabled = true;

        // Enable the button when the input field has a value
        inputField.addEventListener("input", function () {
            submitButton.disabled = inputField.value.trim() === "";
        });
    };
</script>
